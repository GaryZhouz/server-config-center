pipeline {
    agent any

    environment {
        backendServiceName = 'exam-backend'
        frontendServiceName = 'exam-frontend'
        repository = '192.168.56.110:5000'
    }

    tools {
        maven 'my_mvn'
    }

    stages {
        stage('clone project') {
            git credentialsId: '8e2e0e14-aca5-4953-80fe-a121001ab4ed', url: 'git@github.com:wzz1206414629/test_exam.git/'
        }

        stage('backend package') {
            steps {
                sh 'ls'
                echo 'delete target'
                sh 'cd ./exam-admin && rm -rf target'

                echo 'start package'
                sh 'cd ./exam-admin && mvn -B -DskipTests clean package'
                echo 'maven package jar success'
            }
        }

        stage('delete container and images') {
            steps {
                echo '[$backendServiceName, $frontendServiceName] docker will delete old images'
                sh 'docker rmi -f \$(docker images | grep $backendServiceName | awk \'{print $3}\') | true'
                sh 'docker rmi -f \$(docker images | grep $frontendServiceName | awk \'{print $3}\') | true'
            }
        }

        stage('[backend] build docker image && push local image to docker repository') {
            steps {
                echo '[$backendServiceName] docker build image'
                sh 'docker build --no-cache -t $backendServiceName:${BUILD_NUMBER} -f ./exam-admin/Dockerfile .'
                sh 'docker tag $backendServiceName:${BUILD_NUMBER} $repository/$backendServiceName:${BUILD_NUMBER}'
                sh 'docker push $repository/$backendServiceName:${BUILD_NUMBER}'
            }
        }

        stage('[frontend] build docker image && push local image to docker repository') {
            steps {
                echo '[$frontendServiceName] docker build image'
                sh 'docker build --no-cache -t $frontendServiceName:${BUILD_NUMBER} -f ./exam-vue/Dockerfile .'
                sh 'docker tag $frontendServiceName:${BUILD_NUMBER} $repository/$frontendServiceName:${BUILD_NUMBER}'
                sh 'docker push $repository/$frontendServiceName:${BUILD_NUMBER}'
            }
        }

        stage('deploy image to k8s') {
            steps {
                sh 'wget https://raw.githubusercontent.com/wzz1206414629/server-config-center/master/Deployment%20Script/exam/k8s.yml'
                sh "ls"
                sh "sed -i 's#<frontend-image-name>#abc.com/$frontendServiceName:${BUILD_NUMBER}#g;' ./k8s.yml"
                sh "sed -i 's#<backend-image-name>#abc.com/$backendServiceName:${BUILD_NUMBER}#g;' ./k8s.yml"
                sh 'cat k8s.yml'
                sh 'kubectl apply -f ./k8s.yml'
            }
        }
    }
}
