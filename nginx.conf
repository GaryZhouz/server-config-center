user  www www;
worker_processes auto;
error_log  /www/wwwlogs/nginx_error.log  crit;
pid        /www/server/nginx/logs/nginx.pid;
worker_rlimit_nofile 51200;

events {
        use epoll;
        worker_connections 51200;
        multi_accept on;
}

http {
        include       mime.types;
                #include luawaf.conf;

                include proxy.conf;

        default_type  application/octet-stream;

        server_names_hash_bucket_size 512;
        client_header_buffer_size 32k;
        large_client_header_buffers 4 32k;
        client_max_body_size 50m;

        sendfile   on;
        tcp_nopush on;

        keepalive_timeout 60;

        tcp_nodelay on;

        fastcgi_connect_timeout 300;
        fastcgi_send_timeout 300;
        fastcgi_read_timeout 300;
        fastcgi_buffer_size 64k;
        fastcgi_buffers 4 64k;
        fastcgi_busy_buffers_size 128k;
        fastcgi_temp_file_write_size 256k;
                fastcgi_intercept_errors on;

        gzip on;
        gzip_min_length 1k;
        gzip_buffers     4 16k;
        gzip_http_version 1.1;
        gzip_comp_level 2;
        gzip_types     text/plain application/javascript application/x-javascript text/javascript text/css application/xml;
        gzip_vary on;
        gzip_proxied   expired no-cache no-store private auth;
        gzip_disable   "MSIE [1-6]\.";

        limit_conn_zone $binary_remote_addr zone=perip:10m;
                limit_conn_zone $server_name zone=perserver:10m;

        server_tokens off;
        access_log off;

    server {
        listen 80;
    #     server_name *.wzzz.fun; #替换成证书绑定的域名。
        rewrite ^(.*)$ https://$host$1; #将所有HTTP请求通过rewrite指令重定向到HTTPS。
    }

    server {
            #配置HTTPS的默认访问端口为443。
            #如果未在此处配置HTTPS的默认访问端口，可能会造成Nginx无法启动。
            #如果您使用Nginx 1.15.0及以上版本，请使用listen 443 ssl代替listen 443和ssl on。
            listen 443 ssl;
            server_name  wzzz.fun;

            ssl_certificate cert/top-domain-cert.pem;
            ssl_certificate_key cert/top-domain-key.pem;
            ssl_session_timeout 5m;

            #表示使用的加密套件的类型。
            ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE:ECDH:AES:HIGH:!NULL:!aNULL:!MD5:!ADH:!RC4;
            #表示使用的加密套件的类型。
            ssl_protocols TLSv1.1 TLSv1.2 TLSv1.3; #表示使用的TLS协议的类型，您需要自行评估是否配置TLSv1.1协议。
            ssl_prefer_server_ciphers on;

            location / {
                        proxy_pass http://localhost:8080;
            }
    }

    server {
        listen 80;
        server_name jenkins.wzzz.fun;

        location / {
            return 301 https://$host$request_uri;
        }
    }

    server {
            listen 443 ssl;
            server_name  jenkins.wzzz.fun;

            ssl_certificate cert/all-domain-cert.pem;
            ssl_certificate_key cert/all-domain-key.pem;
            ssl_session_timeout 5m;

            #表示使用的加密套件的类型。
            ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE:ECDH:AES:HIGH:!NULL:!aNULL:!MD5:!ADH:!RC4;
            #表示使用的加密套件的类型。
            ssl_protocols TLSv1.1 TLSv1.2 TLSv1.3; #表示使用的TLS协议的类型，您需要自行评估是否配置TLSv1.1协议。
            ssl_prefer_server_ciphers on;

            location / {
                proxy_set_header X-Rea $remote_addr;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header Host $http_host;
                proxy_set_header X-Nginx-Proxy true;
                proxy_pass http://localhost:9999;
                proxy_set_header X-Forwarded-Proto $scheme;
            }
    }

    server {
            listen 443 ssl;
            server_name  file.wzzz.fun;

            ssl_certificate cert/all-domain-cert.pem;
            ssl_certificate_key cert/all-domain-key.pem;
            ssl_session_timeout 5m;

            #表示使用的加密套件的类型。
            ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE:ECDH:AES:HIGH:!NULL:!aNULL:!MD5:!ADH:!RC4;
            #表示使用的加密套件的类型。
            ssl_protocols TLSv1.1 TLSv1.2 TLSv1.3; #表示使用的TLS协议的类型，您需要自行评估是否配置TLSv1.1协议。
            ssl_prefer_server_ciphers on;

            location / {
                    root /wzz/nginx_static_resources/;
                    autoindex on;
                    autoindex_exact_size on;
                    autoindex_localtime on;
                }
    }

    server {
            listen 443 ssl;

            server_name kibana.wzzz.fun;

            ssl_certificate cert/all-domain-cert.pem;
            ssl_certificate_key cert/all-domain-key.pem;
            ssl_session_timeout 5m;

            #表示使用的加密套件的类型。
            ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE:ECDH:AES:HIGH:!NULL:!aNULL:!MD5:!ADH:!RC4;
            #表示使用的加密套件的类型。
            ssl_protocols TLSv1.1 TLSv1.2 TLSv1.3; #表示使用的TLS协议的类型，您需要自行评估是否配置TLSv1.1协议。
            ssl_prefer_server_ciphers on;

            location / {
                proxy_pass http://localhost:5601;
                # auth_basic "secret";
                # auth_basic_user_file /wzz/dev-soft/kibanaPassword;
            }
    }


    server {
            listen 443 ssl;

            server_name twexcel.wzzz.fun;

            ssl_certificate cert/all-domain-cert.pem;
            ssl_certificate_key cert/all-domain-key.pem;
            ssl_session_timeout 5m;

            #表示使用的加密套件的类型。
            ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE:ECDH:AES:HIGH:!NULL:!aNULL:!MD5:!ADH:!RC4;
            #表示使用的加密套件的类型。
            ssl_protocols TLSv1.1 TLSv1.2 TLSv1.3; #表示使用的TLS协议的类型，您需要自行评估是否配置TLSv1.1协议。
            ssl_prefer_server_ciphers on;

            location / {
                proxy_pass http://localhost:9090;
            }
    }

    server {
            listen 443 ssl;

            server_name nacos.wzzz.fun;

            ssl_certificate cert/all-domain-cert.pem;
            ssl_certificate_key cert/all-domain-key.pem;
            ssl_session_timeout 5m;

            #表示使用的加密套件的类型。
            ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE:ECDH:AES:HIGH:!NULL:!aNULL:!MD5:!ADH:!RC4;
            #表示使用的加密套件的类型。
            ssl_protocols TLSv1.1 TLSv1.2 TLSv1.3; #表示使用的TLS协议的类型，您需要自行评估是否配置TLSv1.1协议。
            ssl_prefer_server_ciphers on;

            location / {
                proxy_pass http://localhost:8848;
            }
    }

    server {
            listen       443 ssl;
            server_name  community.wzzz.fun;

            ssl_certificate cert/all-domain-cert.pem;
            ssl_certificate_key cert/all-domain-key.pem;
            ssl_session_timeout 5m;

            #表示使用的加密套件的类型。
            ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE:ECDH:AES:HIGH:!NULL:!aNULL:!MD5:!ADH:!RC4;
            #表示使用的加密套件的类型。
            ssl_protocols TLSv1.1 TLSv1.2 TLSv1.3; #表示使用的TLS协议的类型，您需要自行评估是否配置TLSv1.1协议。
            ssl_prefer_server_ciphers on;

            location / {
                root   /wzz/project/community_front;
                index  index.html index.htm;
                # vue router mode = history的情况使用防止404
                try_files $uri $uri/ /index.html;
            }

            add_header Access-Control-Allow-Origin "*";
            default_type 'text/html';
            charset utf-8;
    }

    server {
            listen       443;
            server_name  blog.wzzz.fun;

            ssl_certificate cert/all-domain-cert.pem;
            ssl_certificate_key cert/all-domain-key.pem;
            ssl_session_timeout 5m;

            #表示使用的加密套件的类型。
            ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE:ECDH:AES:HIGH:!NULL:!aNULL:!MD5:!ADH:!RC4;
            #表示使用的加密套件的类型。
            ssl_protocols TLSv1.1 TLSv1.2 TLSv1.3; #表示使用的TLS协议的类型，您需要自行评估是否配置TLSv1.1协议。
            ssl_prefer_server_ciphers on;

            location / {
                proxy_pass http://localhost:8080;
            }

            add_header Access-Control-Allow-Origin "*";
            default_type 'text/html';
            charset utf-8;
    }

    server {
            listen       443 ssl;
            server_name  exam.wzzz.fun;

            ssl_certificate cert/all-domain-cert.pem;
            ssl_certificate_key cert/all-domain-key.pem;
            ssl_session_timeout 5m;

            #表示使用的加密套件的类型。
            ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE:ECDH:AES:HIGH:!NULL:!aNULL:!MD5:!ADH:!RC4;
            #表示使用的加密套件的类型。
            ssl_protocols TLSv1.1 TLSv1.2 TLSv1.3; #表示使用的TLS协议的类型，您需要自行评估是否配置TLSv1.1协议。
            ssl_prefer_server_ciphers on;

            location / {
                root   /wzz/project/exam_vue;
                index  index.html index.htm;
            }

            location /api {
                rewrite ^/api/(.*)$ /$1 break;
                proxy_pass http://localhost:8888/;
            }

            add_header Access-Control-Allow-Origin "*";
            default_type 'text/html';
            charset utf-8;
    }

    server {
            listen 443 ssl;
            server_name  music.wzzz.fun;# 子域名跳转

            ssl_certificate cert/all-domain-cert.pem;
            ssl_certificate_key cert/all-domain-key.pem;
            ssl_session_timeout 5m;

            #表示使用的加密套件的类型。
            ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE:ECDH:AES:HIGH:!NULL:!aNULL:!MD5:!ADH:!RC4;
            #表示使用的加密套件的类型。
            ssl_protocols TLSv1.1 TLSv1.2 TLSv1.3; #表示使用的TLS协议的类型，您需要自行评估是否配置TLSv1.1协议。
            ssl_prefer_server_ciphers on;

            location / {
                root   /wzz/project/cloud-music;
                index  index.html index.htm;
            }

            location /api {
                    proxy_pass https://autumnfish.cn/;
            }
            add_header Access-Control-Allow-Origin "*";
            default_type 'text/html';
            charset utf-8;
    }
}